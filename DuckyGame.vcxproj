<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="QA|Win32">
      <Configuration>QA</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="ResourceManager.cpp" />
    <ClCompile Include="src\Background.cpp" />
    <ClCompile Include="src\CircleCollisionComponent.cpp" />
    <ClCompile Include="src\EntityComponent.cpp" />
    <ClCompile Include="src\BlueEnemy.cpp" />
    <ClCompile Include="src\CollisionComponent.cpp" />
    <ClCompile Include="src\Frog.cpp" />
    <ClCompile Include="src\GreenEnemy.cpp" />
    <ClCompile Include="src\Main.cpp" />
    <ClCompile Include="src\MusicPlayer.cpp" />
    <ClCompile Include="src\Player.cpp" />
    <ClCompile Include="src\Scene.cpp" />
    <ClCompile Include="src\Scriptable.cpp" />
    <ClCompile Include="src\ScriptManager.cpp" />
    <ClCompile Include="src\SoundComponent.cpp" />
    <ClCompile Include="src\SpriteComponent.cpp" />
    <ClCompile Include="src\TextCounter.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ResourceManager.h" />
    <ClInclude Include="src\Background.h" />
    <ClInclude Include="src\CircleCollisionComponent.h" />
    <ClInclude Include="src\EntityComponent.h" />
    <ClInclude Include="src\BlueEnemy.h" />
    <ClInclude Include="src\CollisionComponent.h" />
    <ClInclude Include="src\DuckyMath.h" />
    <ClInclude Include="src\Entity.h" />
    <ClInclude Include="src\Frog.h" />
    <ClInclude Include="src\GreenEnemy.h" />
    <ClInclude Include="src\MusicPlayer.h" />
    <ClInclude Include="src\Player.h" />
    <ClInclude Include="src\Scene.h" />
    <ClInclude Include="src\Scriptable.h" />
    <ClInclude Include="src\ScriptEntity.h" />
    <ClInclude Include="src\ScriptManager.h" />
    <ClInclude Include="src\SoundComponent.h" />
    <ClInclude Include="src\SpriteComponent.h" />
    <ClInclude Include="src\TextCounter.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".github\workflows\BuildAndDeployGame.yml" />
    <None Include=".github\workflows\BuildGame.yml" />
    <None Include=".github\workflows\CreatePackage.yml" />
    <None Include=".github\workflows\DeployLatestMain.yml" />
    <None Include=".github\workflows\VerifyMain.yml" />
    <None Include="scripts\blueEnemy.lua" />
    <None Include="scripts\frog.lua" />
    <None Include="scripts\greenEnemy.lua" />
    <None Include="scripts\master.lua" />
    <None Include="scripts\player.lua" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{042cd62f-6dc6-4085-83f2-6e7ca14803e1}</ProjectGuid>
    <RootNamespace>DuckyGame</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='QA|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='QA|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)int\$(Configuration)\</IntDir>
    <IncludePath>D:\Projekty\DuckyGame\ThirdParty\lua;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='QA|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)int\$(Configuration)\</IntDir>
    <IncludePath>D:\Projekty\DuckyGame\ThirdParty\lua;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)int\$(Configuration)\</IntDir>
    <IncludePath>D:\Projekty\DuckyGame\ThirdParty\lua;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)ThirdParty\lua\include;$(SolutionDir)ThirdParty\SFML-2.5.1\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ThirdParty\lua;$(SolutionDir)ThirdParty\SFML-2.5.1\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>sfml-graphics-d.lib;sfml-system-d.lib;sfml-window-d.lib;sfml-audio-d.lib;sfml-network-d.lib;lua54.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   openal32.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-audio-d-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-graphics-d-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-system-d-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-window-d-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\lua\  $(OutDir)  lua54.dll  /xc /xn /xo
exit 0</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>rmdir /Q /S  $(OutDir)\Res
ROBOCOPY Res    $(OutDir)\Res *.* /E
rmdir /Q /S  $(OutDir)\scripts
ROBOCOPY scripts    $(OutDir)\scripts *.* /E
exit 0</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>dummyDummy.pepe</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='QA|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_QA;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)ThirdParty\lua\include;$(SolutionDir)ThirdParty\SFML-2.5.1\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ThirdParty\lua;$(SolutionDir)ThirdParty\SFML-2.5.1\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>sfml-graphics.lib;sfml-system.lib;sfml-window.lib;sfml-audio.lib;sfml-network.lib;lua54.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   openal32.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-audio-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-graphics-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-system-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   sfml-window-2.dll  /xc /xn /xo
ROBOCOPY ThirdParty\lua\  $(OutDir)  lua54.dll  /xc /xn /xo
exit 0</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>rmdir /Q /S  $(OutDir)\Res
ROBOCOPY Res    $(OutDir)\Res *.* /E
rmdir /Q /S  $(OutDir)\scripts
ROBOCOPY scripts    $(OutDir)\scripts *.* /E
exit 0</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>dummyDummy.pepe</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>SFML_STATIC;WIN32;NDEBUG;_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)ThirdParty\lua\include;$(SolutionDir)ThirdParty\SFML-2.5.1\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ThirdParty\lua;$(SolutionDir)ThirdParty\SFML-2.5.1\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>sfml-graphics-s.lib;sfml-system-s.lib;sfml-window-s.lib;sfml-audio-s.lib;sfml-network-s.lib;opengl32.lib;winmm.lib;ws2_32.lib;gdi32.lib;freetype.lib;openal32.lib;flac.lib;vorbisenc.lib;vorbisfile.lib;vorbis.lib;ogg.lib;lua54.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>ROBOCOPY ThirdParty\SFML-2.5.1\bin\    $(OutDir)   openal32.dll  /xc /xn /xo
ROBOCOPY ThirdParty\lua\  $(OutDir)  lua54.dll  /xc /xn /xo
exit 0</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>rmdir /Q /S  $(OutDir)\Res
ROBOCOPY Res    $(OutDir)\Res *.* /E
rmdir /Q /S  $(OutDir)\scripts
ROBOCOPY scripts    $(OutDir)\scripts *.* /E
exit 0</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>dummyDummy.pepe</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>